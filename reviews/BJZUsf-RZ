{"notes":[{"tddate":null,"ddate":null,"tmdate":1515138475176,"tcdate":1515138475176,"number":2,"cdate":1515138475176,"id":"rk72pinQf","invitation":"ICLR.cc/2018/Conference/-/Paper935/Public_Comment","forum":"BJZUsf-RZ","replyto":"BJZUsf-RZ","signatures":["(anonymous)"],"readers":["everyone"],"writers":["(anonymous)"],"content":{"title":"Authors' response","comment":"The authors thank the reviewers for their constructive suggestions, comments, and corrections. We have studied your recommendations carefully and will use them as a guide to improve future versions of the paper.  "},"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization","abstract":"We propose a modification to weight normalization techniques that provides the same convergence benefits but requires fewer computational operations. The proposed method, FastNorm, exploits the low-rank properties of weight updates and infers the norms without explicitly calculating them, replacing an $O(n^2)$ computation with an $O(n)$ one for a fully-connected layer.  It improves numerical stability and reduces accuracy variance enabling higher learning rate and offering better convergence.  We report experimental results that illustrate the advantage of the proposed method. ","pdf":"/pdf/f99a16bc7c712859a8c0167f7615f33c18c9d218.pdf","paperhash":"anonymous|fastnorm_improving_numerical_stability_of_deep_network_training_with_efficient_normalization","_bibtex":"@article{\n  anonymous2018fastnorm:,\n  title={FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BJZUsf-RZ}\n}","withdrawal":"Confirmed","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper935/Authors"],"keywords":["Neural networks","Training","Convergence"]}},{"tddate":null,"ddate":null,"tmdate":1515642532747,"tcdate":1511833007191,"number":3,"cdate":1511833007191,"id":"HJP2p49eG","invitation":"ICLR.cc/2018/Conference/-/Paper935/Official_Review","forum":"BJZUsf-RZ","replyto":"BJZUsf-RZ","signatures":["ICLR.cc/2018/Conference/Paper935/AnonReviewer1"],"readers":["everyone"],"content":{"title":"Implicit weight normalization","rating":"3: Clear rejection","review":"The paper consider a method for \"weight normalization\" of layers of a neural network.  The weight matrix is maintained normalized, which helps accuracy.  However, the simplest way to normalize on a fully connected layer is quadratic (adding squares of weights and taking square root).\n\n The paper proposes \"FastNorm\", which is a way to implicitly maintain the normalized weight matrix using much less computation.  Essentially, a normalization vector is maintained an updated separately.\n\n  Pros:   Natural method to do weight normalization efficeintly\n\n  Cons:   A very natural and simple solution that is fairly obvious.\n\n          Limited experiments \n\n","confidence":"3: The reviewer is fairly confident that the evaluation is correct"},"writers":[],"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization","abstract":"We propose a modification to weight normalization techniques that provides the same convergence benefits but requires fewer computational operations. The proposed method, FastNorm, exploits the low-rank properties of weight updates and infers the norms without explicitly calculating them, replacing an $O(n^2)$ computation with an $O(n)$ one for a fully-connected layer.  It improves numerical stability and reduces accuracy variance enabling higher learning rate and offering better convergence.  We report experimental results that illustrate the advantage of the proposed method. ","pdf":"/pdf/f99a16bc7c712859a8c0167f7615f33c18c9d218.pdf","paperhash":"anonymous|fastnorm_improving_numerical_stability_of_deep_network_training_with_efficient_normalization","_bibtex":"@article{\n  anonymous2018fastnorm:,\n  title={FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BJZUsf-RZ}\n}","withdrawal":"Confirmed","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper935/Authors"],"keywords":["Neural networks","Training","Convergence"]}},{"tddate":null,"ddate":null,"tmdate":1515642532783,"tcdate":1511757126348,"number":2,"cdate":1511757126348,"id":"HJRSBGFxM","invitation":"ICLR.cc/2018/Conference/-/Paper935/Official_Review","forum":"BJZUsf-RZ","replyto":"BJZUsf-RZ","signatures":["ICLR.cc/2018/Conference/Paper935/AnonReviewer3"],"readers":["everyone"],"content":{"title":"This paper proposes a computationally fast method to train neural networks with normalized weights.","rating":"4: Ok but not good enough - rejection","review":"This paper proposes a computationally fast method to train neural networks with normalized weights. Experiments demonstrate that their method is promising compared to the competitor “NormProp” which explicitly normalizes the weights of neural networks.\n\nPros: \n(1) The paper is easy to follow.\n\n(2) Authors use figures that are easy to understand to explain their core idea, i.e., maintaining a vector which estimates the row norm of weight matrix and implicitly normalizing weights.\n\nCons:\n(1) If we count the matrix multiplication operation in fc layer along with normalization (in common cases normalization should follow a weighted layer), the whole computation complexity becomes O(mn) rather than O(n+m), so I doubt how fast it could be in the common case.\n\n(2) Authors did a MNIST experiment with a 2-fc layer neural network for comparing their FastNorm to NormProp. It is a bit strange that they do not show the difference of speed, but show that FastNorm can outperform NormProp in terms of classification accuracy with a higher learning rate. Since the efficiency is one of the main contributions, I suggest authors add this comparison.\n\n(3) The proposed FastNorm improves the stability by observing the standard deviation of validation accuracies in training phase. The authors attribute this to the reduction of accumulated rounding error in training process, which is somewhat against the community’s consensus, i.e., float precision is not that important so we can use float32 or even float16 to train/do inference for neural networks. I’m curious if this phenomenon still holds if authors use float64 in the experiments.\n\nSome typos:\nFirst line in page 3: “brining” should be “bringing”\n\nOverall, I think the current version of the paper is not ready for ICLR conference. Authors need more experiments to show their approach’s effectiveness. For example, batching and convolution as mentioned by authors would be more significant. \n","confidence":"4: The reviewer is confident but not absolutely certain that the evaluation is correct"},"writers":[],"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization","abstract":"We propose a modification to weight normalization techniques that provides the same convergence benefits but requires fewer computational operations. The proposed method, FastNorm, exploits the low-rank properties of weight updates and infers the norms without explicitly calculating them, replacing an $O(n^2)$ computation with an $O(n)$ one for a fully-connected layer.  It improves numerical stability and reduces accuracy variance enabling higher learning rate and offering better convergence.  We report experimental results that illustrate the advantage of the proposed method. ","pdf":"/pdf/f99a16bc7c712859a8c0167f7615f33c18c9d218.pdf","paperhash":"anonymous|fastnorm_improving_numerical_stability_of_deep_network_training_with_efficient_normalization","_bibtex":"@article{\n  anonymous2018fastnorm:,\n  title={FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BJZUsf-RZ}\n}","withdrawal":"Confirmed","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper935/Authors"],"keywords":["Neural networks","Training","Convergence"]}},{"tddate":null,"ddate":null,"tmdate":1515642532822,"tcdate":1511730897761,"number":1,"cdate":1511730897761,"id":"HJqAAj_xz","invitation":"ICLR.cc/2018/Conference/-/Paper935/Official_Review","forum":"BJZUsf-RZ","replyto":"BJZUsf-RZ","signatures":["ICLR.cc/2018/Conference/Paper935/AnonReviewer2"],"readers":["everyone"],"content":{"title":"This authors proposed to use an implicit weight normalization approach to replace the explicit weight normalization used in training of neural networks. The contribution is limited.","rating":"4: Ok but not good enough - rejection","review":"This authors proposed to use an implicit weight normalization approach to replace the explicit weight normalization used in training of neural networks. The authors claimed to obtain efficiency improvement and better numerical stability.\n\nThis is a short paper that contains five pages. The idea of the proposed implicit weight normalization is to apply the normalization to scaling the input rather than the rows of the matrices. In terms of the overall time complexity, the improvement seems quite limited considering that the normalization is not the bottleneck operations in the training. In addition, it is not very clear how the proposed approach benefits the mini-batch training of the network. In terms of numerical stability, though experimental results were reported, there is no theoretical analysis. The experiments are quite limited.\n","confidence":"3: The reviewer is fairly confident that the evaluation is correct"},"writers":[],"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization","abstract":"We propose a modification to weight normalization techniques that provides the same convergence benefits but requires fewer computational operations. The proposed method, FastNorm, exploits the low-rank properties of weight updates and infers the norms without explicitly calculating them, replacing an $O(n^2)$ computation with an $O(n)$ one for a fully-connected layer.  It improves numerical stability and reduces accuracy variance enabling higher learning rate and offering better convergence.  We report experimental results that illustrate the advantage of the proposed method. ","pdf":"/pdf/f99a16bc7c712859a8c0167f7615f33c18c9d218.pdf","paperhash":"anonymous|fastnorm_improving_numerical_stability_of_deep_network_training_with_efficient_normalization","_bibtex":"@article{\n  anonymous2018fastnorm:,\n  title={FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BJZUsf-RZ}\n}","withdrawal":"Confirmed","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper935/Authors"],"keywords":["Neural networks","Training","Convergence"]}},{"tddate":null,"ddate":null,"tmdate":1511570160203,"tcdate":1511570160203,"number":1,"cdate":1511570160203,"id":"ByOejNUef","invitation":"ICLR.cc/2018/Conference/-/Paper935/Public_Comment","forum":"BJZUsf-RZ","replyto":"BJZUsf-RZ","signatures":["~Dale_Mowbray1"],"readers":["everyone"],"writers":["~Dale_Mowbray1"],"content":{"title":"Interest in reproducing findings","comment":"I am interested in reproducing the findings of this paper. Could you provide insight of how the neural networks used to compare both normalization techniques are structured? Also, would you be able to provide the source code?\n\nThanks"},"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization","abstract":"We propose a modification to weight normalization techniques that provides the same convergence benefits but requires fewer computational operations. The proposed method, FastNorm, exploits the low-rank properties of weight updates and infers the norms without explicitly calculating them, replacing an $O(n^2)$ computation with an $O(n)$ one for a fully-connected layer.  It improves numerical stability and reduces accuracy variance enabling higher learning rate and offering better convergence.  We report experimental results that illustrate the advantage of the proposed method. ","pdf":"/pdf/f99a16bc7c712859a8c0167f7615f33c18c9d218.pdf","paperhash":"anonymous|fastnorm_improving_numerical_stability_of_deep_network_training_with_efficient_normalization","_bibtex":"@article{\n  anonymous2018fastnorm:,\n  title={FastNorm: Improving Numerical Stability of Deep Network Training with Efficient Normalization},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BJZUsf-RZ}\n}","withdrawal":"Confirmed","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper935/Authors"],"keywords":["Neural networks","Training","Convergence"]}}],"limit":2000,"offset":0}