{"notes":[{"tddate":null,"ddate":null,"tmdate":1512271773466,"tcdate":1512270793868,"number":1,"cdate":1512270793868,"id":"SJGAoJ--f","invitation":"ICLR.cc/2018/Conference/-/Paper337/Public_Comment","forum":"BkPrDFgR-","replyto":"rkq9KFDlz","signatures":["(anonymous)"],"readers":["everyone"],"writers":["(anonymous)"],"content":{"title":"Trying to parse the review","comment":"\"Generally, I find a jarring mis-fit between the motivation (deep learning\nfor driving, presumably involving millions or billions of parameters) and\nthe actual reach of the methods proposed (hundreds of parameters).\nThis reach is NOT inherent in integer programming, per se. Modern solvers\nroutinely solve instances with tens of millions of non-zeros in the constraint\nmatrix, but require a strong relaxation. The authors may hence consider\nimproving the LP relaxation, noting that the big-M constraint are notorious\nfor producing weak relaxations.\"\n\n--  Not questioning the review, but does the reviewer feel SMT or MILP based approaches to verification are not meaningful? I ask this because of the phrase 'jarring misfit' between the goal of deep learning for driving and the 'reach of the methods proposed '.\n\n -- It is not the number of parameters, rather the number of integer choices that make it hard. I do understand when the reviewer suggests that the bounds generated this way are generally loose (https://arxiv.org/pdf/1711.00851.pdf), and that might be a part of the problem. LPs with 10^9 parameters are easily handled these days. \n\n-- The disjunctions make life difficult for SMT solvers. \n\n-- The title reads 'comparative study'. I think the authors make it clear what the contribution might be. \n\n-- The architecture for ACAS for example has ~13k parameters, and 300 nodes. It's a decent sized network. The field of verifying deep nets is a few years old and in its infancy. If the contributions in the field can push it another 2-3 orders of magnitude, we might see it reach verifying 'deep learning for driving' problems\n\nPS. I have nothing to do with the authors, but a random bystander trying to identify possible directions to make contributions. I haven't even fully read the paper, just confused as to what this review is trying to convey."},"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"Piecewise Linear Neural Networks verification: A comparative study","abstract":"The success of Deep Learning and its potential use in many important safety-\ncritical applications has motivated research on formal verification of Neural Net-\nwork (NN) models. Despite the reputation of learned NN models to behave as\nblack boxes and theoretical hardness results of the problem of proving their prop-\nerties, researchers have been successful in verifying some classes of models by\nexploiting their piecewise linear structure. Unfortunately, most of these works\ntest their algorithms on their own models and do not offer any comparison with\nother approaches. As a result, the advantages and downsides of the different al-\ngorithms are not well understood. Motivated by the need of accelerating progress\nin this very important area, we investigate the trade-offs of a number of different\napproaches based on Mixed Integer Programming, Satisfiability Modulo Theory,\nas well as a novel method based on the Branch-and-Bound framework. We also\npropose a new data set of benchmarks, in addition to a collection of previously\nreleased testcases that can be used to compare existing methods. Our analysis not\nonly allowed a comparison to be made between different strategies, the compar-\nision of results from different solvers also revealed implementation bugs in pub-\nlished methods. We expect that the availability of our benchmark and the analysis\nof the different approaches will allow researchers to invent and evaluate promising\napproaches for making progress on this important topic.","pdf":"/pdf/c1a48dfee059042554be5be83ba531a98bf82b26.pdf","paperhash":"anonymous|piecewise_linear_neural_networks_verification_a_comparative_study","_bibtex":"@article{\n  anonymous2018piecewise,\n  title={Piecewise Linear Neural Networks verification: A comparative study},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BkPrDFgR-}\n}","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper337/Authors"],"keywords":["Verification","SMT solver","Mixed Integer Programming","Neural Networks"]}},{"tddate":null,"ddate":null,"tmdate":1512222622074,"tcdate":1511655825959,"number":3,"cdate":1511655825959,"id":"rkq9KFDlz","invitation":"ICLR.cc/2018/Conference/-/Paper337/Official_Review","forum":"BkPrDFgR-","replyto":"BkPrDFgR-","signatures":["ICLR.cc/2018/Conference/Paper337/AnonReviewer2"],"readers":["everyone"],"content":{"title":"no original contribution","rating":"3: Clear rejection","review":"The paper compares some recently proposed method for validation of properties\nof piece-wise linear neural networks and claims to propose a novel method for\nthe same. Unfortunately, the proposed \"branch and bound method\" does not explain\nhow to implement the \"bound\" part (\"compute lower bound\") -- and has been used \nseveral times in the same application, incl.:\n\nRuediger Ehlers. Planet. https://github.com/progirep/planet,\nChih-Hong Cheng, Georg Nuhrenberg, and Harald Ruess.  Maximum resilience of artificial neural networks. Automated Technology for Verification and Analysis\nAlessio Lomuscio and Lalit Maganti.  An approach to reachability analysis for feed-forward relu neural networks. arXiv:1706.07351\n\nSpecifically, the authors say: \"In our experiments, we use the result of \nminimising the variable corresponding to the output of the network, subject \nto the constraints of the linear approximation introduced by Ehlers (2017a)\"\nwhich sounds a bit like using linear programming relaxations, which is what\nthe approaches using branch and bound cited above use. If that is the case,\nthe paper does not have any original contribution. If that is not the case,\nthe authors may have some contribution to make, but have not made it in this\npaper, as it does not explain the lower bound computation other than the one\nbased on LPs.\n\nGenerally, I find a jarring mis-fit between the motivation (deep learning\nfor driving, presumably involving millions or billions of parameters) and\nthe actual reach of the methods proposed (hundreds of parameters).\nThis reach is NOT inherent in integer programming, per se. Modern solvers\nroutinely solve instances with tens of millions of non-zeros in the constraint\nmatrix, but require a strong relaxation. The authors may hence consider\nimproving the LP relaxation, noting that the big-M constraint are notorious\nfor producing weak relaxations.","confidence":"5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature"},"writers":[],"nonreaders":[],"replyCount":1,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"Piecewise Linear Neural Networks verification: A comparative study","abstract":"The success of Deep Learning and its potential use in many important safety-\ncritical applications has motivated research on formal verification of Neural Net-\nwork (NN) models. Despite the reputation of learned NN models to behave as\nblack boxes and theoretical hardness results of the problem of proving their prop-\nerties, researchers have been successful in verifying some classes of models by\nexploiting their piecewise linear structure. Unfortunately, most of these works\ntest their algorithms on their own models and do not offer any comparison with\nother approaches. As a result, the advantages and downsides of the different al-\ngorithms are not well understood. Motivated by the need of accelerating progress\nin this very important area, we investigate the trade-offs of a number of different\napproaches based on Mixed Integer Programming, Satisfiability Modulo Theory,\nas well as a novel method based on the Branch-and-Bound framework. We also\npropose a new data set of benchmarks, in addition to a collection of previously\nreleased testcases that can be used to compare existing methods. Our analysis not\nonly allowed a comparison to be made between different strategies, the compar-\nision of results from different solvers also revealed implementation bugs in pub-\nlished methods. We expect that the availability of our benchmark and the analysis\nof the different approaches will allow researchers to invent and evaluate promising\napproaches for making progress on this important topic.","pdf":"/pdf/c1a48dfee059042554be5be83ba531a98bf82b26.pdf","paperhash":"anonymous|piecewise_linear_neural_networks_verification_a_comparative_study","_bibtex":"@article{\n  anonymous2018piecewise,\n  title={Piecewise Linear Neural Networks verification: A comparative study},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BkPrDFgR-}\n}","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper337/Authors"],"keywords":["Verification","SMT solver","Mixed Integer Programming","Neural Networks"]}},{"tddate":null,"ddate":null,"tmdate":1512222622114,"tcdate":1511397298481,"number":2,"cdate":1511397298481,"id":"H1c3wqQef","invitation":"ICLR.cc/2018/Conference/-/Paper337/Official_Review","forum":"BkPrDFgR-","replyto":"BkPrDFgR-","signatures":["ICLR.cc/2018/Conference/Paper337/AnonReviewer1"],"readers":["everyone"],"content":{"title":"review","rating":"5: Marginally below acceptance threshold","review":"Summary:\n\nThis paper:\n- provides a compehensive review of existing techniques for verifying properties of neural networks\n- introduces a simple branch-and-bound approach\n- provides fairly extensive experimental comparison of their method and 3 others (Reluplex, Planet, MIP) on 2 existing benchmarks and a new synthetic one\n\nRelevance: Although there isn't any learning going on, the paper is relevant to the conference.\n\nClarity: Writing is excellent, the content is well presented and the paper is enjoyable read.\n\nSoundness: As far as I can tell, the work is sound.\n\nNovelty: This is in my opinion the weakest point of the paper. There isn't really much novelty in the work. The branch&bound method is fairly standard, two benchmarks were already existing and the third one is synthetic with weights that are not even trained (so not clear how relevant it is). The main novel result is the experimental comparison, which does indeed show some surprising results (like the fact that BaB works so well).\n\nSignificance: There is some value in the experimental results, and it's great to see you were able to find bugs in existing methods. Unfortunately, there isn't much insight to be gained from them. I couldn't see any emerging trend/useful recommendations (like \"if your problem looks like X, then use algorithm B\"). This is unfortunately often the case when dealing with combinatorial search/optimization. ","confidence":"4: The reviewer is confident but not absolutely certain that the evaluation is correct"},"writers":[],"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"Piecewise Linear Neural Networks verification: A comparative study","abstract":"The success of Deep Learning and its potential use in many important safety-\ncritical applications has motivated research on formal verification of Neural Net-\nwork (NN) models. Despite the reputation of learned NN models to behave as\nblack boxes and theoretical hardness results of the problem of proving their prop-\nerties, researchers have been successful in verifying some classes of models by\nexploiting their piecewise linear structure. Unfortunately, most of these works\ntest their algorithms on their own models and do not offer any comparison with\nother approaches. As a result, the advantages and downsides of the different al-\ngorithms are not well understood. Motivated by the need of accelerating progress\nin this very important area, we investigate the trade-offs of a number of different\napproaches based on Mixed Integer Programming, Satisfiability Modulo Theory,\nas well as a novel method based on the Branch-and-Bound framework. We also\npropose a new data set of benchmarks, in addition to a collection of previously\nreleased testcases that can be used to compare existing methods. Our analysis not\nonly allowed a comparison to be made between different strategies, the compar-\nision of results from different solvers also revealed implementation bugs in pub-\nlished methods. We expect that the availability of our benchmark and the analysis\nof the different approaches will allow researchers to invent and evaluate promising\napproaches for making progress on this important topic.","pdf":"/pdf/c1a48dfee059042554be5be83ba531a98bf82b26.pdf","paperhash":"anonymous|piecewise_linear_neural_networks_verification_a_comparative_study","_bibtex":"@article{\n  anonymous2018piecewise,\n  title={Piecewise Linear Neural Networks verification: A comparative study},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BkPrDFgR-}\n}","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper337/Authors"],"keywords":["Verification","SMT solver","Mixed Integer Programming","Neural Networks"]}},{"tddate":null,"ddate":null,"tmdate":1512222622151,"tcdate":1511206696842,"number":1,"cdate":1511206696842,"id":"ByZNy3ggM","invitation":"ICLR.cc/2018/Conference/-/Paper337/Official_Review","forum":"BkPrDFgR-","replyto":"BkPrDFgR-","signatures":["ICLR.cc/2018/Conference/Paper337/AnonReviewer3"],"readers":["everyone"],"content":{"title":"Interesting study with some flaws","rating":"6: Marginally above acceptance threshold","review":"The paper studies methods for verifying neural nets through their piecewise\nlinear structure. The authors survey different methods from the literature,\npropose a novel one, and evaluate them on a set of benchmarks.\n\nA major drawback of the evaluation of the different approaches is that\neverything was used with its default parameters. It is very unlikely that these\ndefaults are optimal across the different benchmarks. To get a better impression\nof what approaches perform well, their parameters should be tuned to the\nparticular benchmark. This may significantly change the conclusions drawn from\nthe experiments.\n\nFigures 4-7 are hard to interpret and do not convey a clear message. There is no\nclear trend in many of them and a lot of noise. It may be better to relate the\nstructure of the network to other measures of the hardness of a problem, e.g.\nthe phase transition. Again parameter tuning would potentially change all of\nthese figures significantly, as would e.g. a change in hardware. Given the kind\nof general trend the authors seem to want to show here, I feel that a more\ntheoretic measure of problem hardness would be more appropriate here.\n\nThe authors say of the proposed TwinStream dataset that it \"may not be\nrepresentative of real use-cases\". It seems odd to propose something that is\nentirely artificial.\n\nThe description of the empirical setup could be more detailed. Are the\nproperties that are being verified different properties, or the same property on\ndifferent networks?\n\nThe tables look ugly. It seems that the header \"data set\" should be \"approach\"\nor something similar.\n\nIn summary, I feel that while there are some issues with the paper, it presents\ninteresting results and can be accepted.","confidence":"3: The reviewer is fairly confident that the evaluation is correct"},"writers":[],"nonreaders":[],"replyCount":0,"writable":false,"revisions":false,"tags":[],"forumContent":{"title":"Piecewise Linear Neural Networks verification: A comparative study","abstract":"The success of Deep Learning and its potential use in many important safety-\ncritical applications has motivated research on formal verification of Neural Net-\nwork (NN) models. Despite the reputation of learned NN models to behave as\nblack boxes and theoretical hardness results of the problem of proving their prop-\nerties, researchers have been successful in verifying some classes of models by\nexploiting their piecewise linear structure. Unfortunately, most of these works\ntest their algorithms on their own models and do not offer any comparison with\nother approaches. As a result, the advantages and downsides of the different al-\ngorithms are not well understood. Motivated by the need of accelerating progress\nin this very important area, we investigate the trade-offs of a number of different\napproaches based on Mixed Integer Programming, Satisfiability Modulo Theory,\nas well as a novel method based on the Branch-and-Bound framework. We also\npropose a new data set of benchmarks, in addition to a collection of previously\nreleased testcases that can be used to compare existing methods. Our analysis not\nonly allowed a comparison to be made between different strategies, the compar-\nision of results from different solvers also revealed implementation bugs in pub-\nlished methods. We expect that the availability of our benchmark and the analysis\nof the different approaches will allow researchers to invent and evaluate promising\napproaches for making progress on this important topic.","pdf":"/pdf/c1a48dfee059042554be5be83ba531a98bf82b26.pdf","paperhash":"anonymous|piecewise_linear_neural_networks_verification_a_comparative_study","_bibtex":"@article{\n  anonymous2018piecewise,\n  title={Piecewise Linear Neural Networks verification: A comparative study},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BkPrDFgR-}\n}","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper337/Authors"],"keywords":["Verification","SMT solver","Mixed Integer Programming","Neural Networks"]}},{"tddate":null,"ddate":null,"tmdate":1509739357168,"tcdate":1509099327089,"number":337,"cdate":1509739354510,"id":"BkPrDFgR-","invitation":"ICLR.cc/2018/Conference/-/Blind_Submission","forum":"BkPrDFgR-","signatures":["ICLR.cc/2018/Conference"],"readers":["everyone"],"writers":["ICLR.cc/2018/Conference"],"content":{"title":"Piecewise Linear Neural Networks verification: A comparative study","abstract":"The success of Deep Learning and its potential use in many important safety-\ncritical applications has motivated research on formal verification of Neural Net-\nwork (NN) models. Despite the reputation of learned NN models to behave as\nblack boxes and theoretical hardness results of the problem of proving their prop-\nerties, researchers have been successful in verifying some classes of models by\nexploiting their piecewise linear structure. Unfortunately, most of these works\ntest their algorithms on their own models and do not offer any comparison with\nother approaches. As a result, the advantages and downsides of the different al-\ngorithms are not well understood. Motivated by the need of accelerating progress\nin this very important area, we investigate the trade-offs of a number of different\napproaches based on Mixed Integer Programming, Satisfiability Modulo Theory,\nas well as a novel method based on the Branch-and-Bound framework. We also\npropose a new data set of benchmarks, in addition to a collection of previously\nreleased testcases that can be used to compare existing methods. Our analysis not\nonly allowed a comparison to be made between different strategies, the compar-\nision of results from different solvers also revealed implementation bugs in pub-\nlished methods. We expect that the availability of our benchmark and the analysis\nof the different approaches will allow researchers to invent and evaluate promising\napproaches for making progress on this important topic.","pdf":"/pdf/c1a48dfee059042554be5be83ba531a98bf82b26.pdf","paperhash":"anonymous|piecewise_linear_neural_networks_verification_a_comparative_study","_bibtex":"@article{\n  anonymous2018piecewise,\n  title={Piecewise Linear Neural Networks verification: A comparative study},\n  author={Anonymous},\n  journal={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=BkPrDFgR-}\n}","authors":["Anonymous"],"authorids":["ICLR.cc/2018/Conference/Paper337/Authors"],"keywords":["Verification","SMT solver","Mixed Integer Programming","Neural Networks"]},"nonreaders":[],"replyCount":4,"writable":false,"revisions":true,"tags":[],"forumContent":null,"tauthor":"ICLR.cc/2018/Conference"}],"limit":2000,"offset":0}